@model IEnumerable<DataLayer.Board>

@{
    ViewBag.Title = "Index";

    List<DataLayer.Board> activeBoards = ((List<DataLayer.Board>)(ViewBag.activeBoards));
    List<DataLayer.Board> completedBoards = ((List<DataLayer.Board>)(ViewBag.completedBoards));

}

<h2>Active Games</h2>
@if (activeBoards == null || !activeBoards.Any())
{
    <p>No active games to display.</p>
}
else
{
    <table class="table">
        <tr>
            <th>
                Host
            </th>
            <th>
                Your Turn
            </th>
            <th>
                Players
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.minSkillRange)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.maxSkillRange)
            </th>
            <th></th>
        </tr>

        @foreach (var item in activeBoards)
        {
            string turn = item.Status == "Active" ? item.ActiveBoardPlayer.UserName : "";

            <tr>
                <td><a href="History?userName=@item.Host.UserName">
                    @item.Host.UserName
                    </a>
                </td>
                <td>
                    @if (item.Status == "New")
                    {
                        <span>-</span>
                    }
                    else
                    {
                        if (turn == User.Identity.Name)
                        {
                        <span style="color:green; font-weight:bold">&#x2713;</span>
                        }
                        else
                        {
                       <span style="color:red; font-weight:bold">&#x2717;</span>
                        }
                    }


                </td>
                <td>
                    @item.Users.Count()/@item.MaximumPlayers
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.minSkillRange)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.maxSkillRange)
                </td>
                <td>

                    @if (item.Status == "New" && item.Host.UserName == User.Identity.Name)
                    {
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id })

                        if (item.Users.Count() >= 2)
                        {
                            using (Html.BeginForm("StartGame", "Boards", FormMethod.Post))
                            {
                                @Html.AntiForgeryToken()

                                <input type="hidden" name="id" value="@item.Id">
                                <button type="submit" name="button" value="StartGame">Start Game</button>
                            }
                        }
                    }

                    else if (item.Status == "Active")
                    {
                        @Html.ActionLink("Details", "Details", new { id = item.Id })
                        <br />
                        @Html.ActionLink("Forfeit", "Forfeit", new { id = item.Id })
                    }
                </td>
            </tr>
        }

    </table>
}

<br />


<h2>Recent Games</h2>
@if (completedBoards == null || !completedBoards.Any())
{
    <p>No completed games to display.</p>
}
else
{
    <table class="table">
        <tr>
            <th>
                W/L
            </th>
            <th>
                Host
            </th>
            <th>
                Winner
            </th>
            <th>
                Players
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.minSkillRange)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.maxSkillRange)
            </th>
            <th></th>
        </tr>

        @foreach (var item in completedBoards)
        {
                <tr>
                    <td>
                        @if (item.Winner.UserName == User.Identity.Name)
                        {
                            <span style="color:green; font-weight:bold">&#x2713;</span>
                        }
                        else
                        {
                            <span style="color:red; font-weight:bold">&#x2717;</span>
                        }

                    </td>
                    <td>
                        <a href="History?userName=@item.Host.UserName">
                            @item.Host.UserName
                        </a>
                    </td>
                    <td><a href="History?userName=@item.Winner.UserName">
                        @item.Winner.UserName
                        </a>
                    </td>
                    <td>
                        @item.Users.Count()
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.minSkillRange)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.maxSkillRange)
                    </td>
                </tr>
                }

            </table>
            }